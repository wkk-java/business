spring.shardingsphere.datasource.names= m1,s1

#配置第一个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://wk-server1:3306/order?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=master
spring.shardingsphere.datasource.m1.password=${pwd}

#配置第二个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.s1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s1.url=jdbc:mysql://wk-server:3307/order?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.s1.username=slave
spring.shardingsphere.datasource.s1.password=${pwd}


spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=m1
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=s1

#spring.shardingsphere.rules.readwrite-splitting.data-sources.order.load-balancer-name= # 负载均衡算法名称
#
## 负载均衡算法配置
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.type= # 负载均衡算法类型
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # 负载均衡算法属性配置

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true